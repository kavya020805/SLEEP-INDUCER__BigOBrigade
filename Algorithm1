1. Start.

2. Input:
   - Number of individuals `n` and Number of dormitories `m`.
   - Number of channels available in each dorms.
   - Names, Id, Sleep times, and p of all individuals.

3. Data Preparation:
   - Create a variable 'summ' to keep a track of the total number of channels available in all dormitories.
   - Create an array `c` to store the number of channels in each dorm.
   - Create a vector `a` to store the sleep times, channels, and name of each individual.

4. Sort Individuals:
   - Sort the vector `a` based on sleep time.

5. Distribute to Dormitories:
   - Create a vector of stacks `v`, where each stack represents a dormitory.
   - Iterate over the sorted vector `a`.
     - For each individual:
       - Check if there's a dorm where the individual can be allocated based on sleep time and channel availability.
       - If found, add the individual to that dormitory.
       - If not found, create a new dormitory and add the individual to it.

6. Output:
   - Print the number of dorms and total number of channels available.
   - If all the inmates can not be placed in the dorms available, print "Not possible".
   - Or else, iterate over each dorm:
     - Print the dorm id.
     - Also, print the individuals allocated to each channel in all dorms.

7. End.
